// generated from rosidl_adapter/resource/msg.idl.em
// with input from kachaka_interfaces/msg/KachakaCommand.msg
// generated code does not contain a copyright notice


module kachaka_interfaces {
  module msg {
    module KachakaCommand_Constants {
      const uint8 COMMAND_TYPE_OTHER = 0;
      const uint8 MOVE_SHELF_COMMAND = 1;
      const uint8 RETURN_SHELF_COMMAND = 2;
      const uint8 UNDOCK_SHELF_COMMAND = 5;
      const uint8 MOVE_TO_LOCATION_COMMAND = 7;
      const uint8 RETURN_HOME_COMMAND = 8;
      const uint8 DOCK_SHELF_COMMAND = 9;
      const uint8 SPEAK_COMMAND = 12;
      const uint8 MOVE_TO_POSE_COMMAND = 13;
    };
    struct KachakaCommand {
      uint8 command_type;

      @verbatim (language="comment", text=
        "NOTE: only used for MOVE_SHELF_COMMAND")
      string move_shelf_command_target_shelf_id;

      string move_shelf_command_destination_location_id;

      boolean move_shelf_command_undock_on_destination;

      @verbatim (language="comment", text=
        "NOTE: only used for RETURN_SHELF_COMMAND")
      string return_shelf_command_target_shelf_id;

      @verbatim (language="comment", text=
        "NOTE: only used for UNDOCK_SHELF_COMMAND")
      string undock_shelf_command_target_shelf_id;

      @verbatim (language="comment", text=
        "NOTE: only used for MOVE_TO_LOCATION_COMMAND")
      string move_to_location_command_target_location_id;

      @verbatim (language="comment", text=
        "NOTE: only used for RETURN_HOME_COMMAND")
      boolean return_home_command_silent;

      @verbatim (language="comment", text=
        "NOTE: only used for SPEAK_COMMAND")
      string speak_command_text;

      @verbatim (language="comment", text=
        "NOTE: only used for MOVE_TO_POSE_COMMAND")
      double move_to_pose_command_x;

      double move_to_pose_command_y;

      double move_to_pose_command_yaw;
    };
  };
};
